#+TITLE: Fundamentos de Matemática Financeira
#+AUTHOR: Henrique Carvalho Alves
#+EMAIL: henrique.alves@nubank.com.br
#+LANGUAGE: pt
#+LATEX_HEADER: \usepackage{parskip} \usepackage{amsmath} \usepackage[AUTO]{babel}
#+PROPERTY: header-args :session *cider-org* :exports both

\newpage

# Clojure environment setup for book
#+begin_src clojure :exports none :results silent
(use 'sample)
(use 'sicmutils.env)
(require 'clojure.string)

;; Set precision for BigDecimal math
(import 'java.math.MathContext)
(set! *math-context* (new java.math.MathContext 5 java.math.RoundingMode/HALF_EVEN))

;; Render equations by default
(defmethod print-method sample.Equation [v ^java.io.Writer w]
  (.write w (render v)))
#+end_src

* Juros

  Dado o capital (ou valor presente) ${PV}$, a taxa de juros (%) $i$, o juro
  $I$ e o saldo (ou valor futuro) $FV$, as três relações fundamentais são:

  #+begin_src clojure :results latex :exports results
(align
 (eq 'I (simplify (interest (simple 'i) 1 'PV)))
 (eq 'FV (fv (simple 'i) 1 'PV))
 (eq 'i (rate 'FV 'PV)))
  #+end_src

  #+RESULTS:
  #+begin_export latex
  \begin{align}I &= {PV}\,i\\{FV} &= {PV}\,\left(1 + i\right)\\i &= \left(\frac{{FV}}{{PV}}\right) - 1\end{align}
  #+end_export

  *Exemplo:*

  Um capital de $ 1000 aplicado durante um ano à taxa de 22% ao ano.

  O juro é dado por:
  #+begin_src clojure
(* 1000 0.22M)
  #+end_src

  #+RESULTS:
  : 220.00M

  O saldo ao fim do período é dado por:
  #+begin_src clojure
(* 1000 1.22M)
  #+end_src

  #+RESULTS:
  : 1220.0M

  A taxa de juros pode ser inferida por:
  #+begin_src clojure
(- (/ 1220 1000) 1M)
  #+end_src

  #+RESULTS:
  : 0.22M

  -----
  
  Nesse caso, $i$ representa a taxa de juros ao longo de um período inteiro.

  Quando aplicamos o capital à taxa por mais de um período (por exemplo, 22% ao
  ano durante dois anos), é preciso adotar uma de duas convenções
  para compor o saldo: *juros simples* ou *juros compostos*.

  \newpage
  
** Juros simples

   Aplica-se a taxa $i$ ao mesmo capital (ou valor presente) repetidamente:
   #+begin_src clojure :results latex :exports results
(align
 (eq 'FV
     (* (i->series (simple 'i)) 'PV)
     (fv (simple 'i) 'n 'PV)))
   #+end_src

   #+RESULTS:
   #+begin_export latex
   \begin{align*}{FV} &= {{PV} + {PV}\,i + {PV}\,i + {PV}\,i + \ldots} \\&= {PV}\,\left(1 + i\,n\right)\end{align*}
   #+end_export

   *Exemplo:*

   Um capital de $ 1000 aplicado à taxa de 8% ao mês segue a progressão:
   #+begin_src clojure :results latex :exports results
(align (eq 'FV (* 1000 (i->series (simple 0.08M)))))
   #+end_src

   #+RESULTS:
   #+begin_export latex
   \begin{align*}{FV} &= {1000 + 80.00 + 80.00 + 80.00 + \ldots}\end{align*}
   #+end_export

   Portanto o saldo ao fim de 3 meses equivale a:
   
   #+begin_src clojure
(* 1000 ((simple 0.08M) 3))
   #+end_src

   #+RESULTS:
   : 1240.0M

*** Equivalência de taxas
   
    São equivalentes as taxas $i_1$ e $i_2$ se, aplicadas nos períodos $p_1$ e $p_2$ relativos a duração da cada taxa, resultam no mesmo valor futuro $FV$.

    #+begin_src clojure :results latex :exports results
(align (eq 'FV (fv (simple 'i_1) 'p_1 'PV) (fv (simple 'i_2) 'p_2 'PV)))
    #+end_src

    #+RESULTS:
    #+begin_export latex
    \begin{align*}{FV} &= {PV}\,\left(1 + i_1\,p_1\right) \\&= {PV}\,\left(1 + i_2\,p_2\right)\end{align*}
    #+end_export

    Simplificando:
    #+begin_src clojure :results latex :exports results
(align (eq (simplify (interest (simple 'i_1) 'p_1 1))
           (simplify (interest (simple 'i_2) 'p_2 1))))
    #+end_src

    #+RESULTS:
    #+begin_export latex
    \begin{align*}i_1\,p_1 &= i_2\,p_2\end{align*}
    #+end_export

    *Exemplo:*

    Qual a taxa mensal equivalente a 22% ao ano em juros simples?
    #+begin_src clojure
(* 0.22M 1/12)
    #+end_src

    #+RESULTS:
    : 0.018333M

    Prova:
    #+begin_src clojure
(rate (* ((simple 0.018333M) 12) 1000) 1000)
    #+end_src

    #+RESULTS:
    : 0.22M

** Juros compostos

   Aplica-se a taxa $i$ sobre o saldo de cada período recursivamente:
   #+begin_src clojure :results latex :exports results
(align
 (eq 'FV (* (i->series (compound 'i)) 'PV) (fv (compound 'i) 'n 'PV)))
   #+end_src

   #+RESULTS:
   #+begin_export latex
   \begin{align*}{FV} &= {{PV} + {PV}\,i + \left({PV}\,{i}^{2} + {PV}\,i\right) + \left({PV}\,{i}^{3} + 2\,{PV}\,{i}^{2} + {PV}\,i\right) + \ldots} \\&= {PV}\,{\left(1 + i\right)}^{n}\end{align*}
   #+end_export

   *Exemplo:*

   Um capital de $ 1000 aplicado à taxa de 8% ao mês segue a progressão:
   
   #+begin_src clojure :results latex :exports results
(eq 'FV (* 1000 (i->series (compound 0.08M))))
   #+end_src

   #+RESULTS:
   #+begin_export latex
   ${FV} = {1000 + 80.00 + 86.400 + 93.300 + \ldots}$
   #+end_export

   Portanto o saldo ao fim de 3 meses equivale a:
   
   #+begin_src clojure
(* 1000 ((compound 0.08M) 3))
   #+end_src

   #+RESULTS:
   : 1259.7M
   
*** Equivalência de taxas
   
    São equivalentes as taxas $i_1$ e $i_2$ se, aplicadas nos períodos $p_1$ e $p_2$ relativos a duração da cada taxa, resultam no mesmo valor futuro $FV$.

    #+begin_src clojure :results latex :exports results
(align (eq 'FV (fv (compound 'i_1) 'p_1 'PV) (fv (compound 'i_2) 'p_2 'PV)))
    #+end_src

    #+RESULTS:
    #+begin_export latex
    \begin{align*}{FV} &= {PV}\,{\left(1 + i_1\right)}^{p_1} \\&= {PV}\,{\left(1 + i_2\right)}^{p_2}\end{align*}
    #+end_export

    Simplificando:
    #+begin_src clojure :results latex :exports results
(align (eq (simplify (interest (compound 'i_1) 'p_1 1))
           (simplify (interest (compound 'i_2) 'p_2 1))))
    #+end_src

    #+RESULTS:
    #+begin_export latex
    \begin{align*}{\left(i_1 + 1\right)}^{p_1} + -1 &= {\left(i_2 + 1\right)}^{p_2} + -1\end{align*}
    #+end_export

    *Exemplo:*

    Qual a taxa mensal equivalente a 12.65% ao ano em juros compostos?
    #+begin_src clojure
(- (expt 1.1265M 1/12) 1)
    #+end_src

    #+RESULTS:
    : 0.009975719105089098

    Prova:
    #+begin_src clojure
(rate (* ((compound 0.009976) 12) 1000) 1000)
    #+end_src

    #+RESULTS:
    : 0.12650375963811866
